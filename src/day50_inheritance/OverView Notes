What we can have inside one Class
CONSTRUCTOR is used to initialize object
			instance method can be accessed
			
GETTERS and SETTERS used to get and set the value

Difference between setting value by constructor and setter:
		- constructor while the object is created it is setting in one shot
		- setter is used after creating object

When we use static field: 
						class variable/class field
						we have only one copy
STATIC METHOD :
               className.methodName
               no need to create object
               no relation to any object
               can only access static

INSTANCE METHOD: 
				object is needed
				instance field can be accessed inside method
				static field can be accessed
				constructor cannot be accessed
				
INHERITANCE:
				relationship betWeen 2 classes
				a class can extend another class
				a class can use fiels and method from another 
					class by extending it, instead of creating from scratch
			    
	IS-A Relationship: parent child relationship
					   example: Student IS-A Person
					            LocalStudent IS-A Student
					            Car IS-A Vehicle
					            
	How Many class a class can extends directly: 
		a class can only extend one another class directly
	BAD: public class STudent extends PErson, Human, Robot {}
	
	Child -> Parent -> GrandParent -> Object (class)
	
	Child c1 = new Child ();
	c1.everyVisibleFieldsAndMethod...
	
	What's inherited from super class
		All visible fields/methods from super class
		Constructor IS NOT INHERITED
	
	Access Modifiers / Visibility:
		private : ---> in same class
		default : ---> same package
		protected:---> same package,  classes outside package
		public  : ---> everywhere
    
    Constructor :
    	how can we call other constructors of same class
    		this (args...)
    			it has to be first statement
    			it can only be called once
    			recursive call should be avoided / calling each other, if it is done 
    				super() will be inserted in first line if there is no constructor
    			super () and this() cannot be showup together in same constructor
    			CANNOT CAL A CONSTRUCTOR - that we dont have
    			
		how can we call super class constructors
    		super (args...)
	