	The static keyword in Java means that the variable or function is 
shared between all instances of that class as it belongs to the type, 
not the actual objects themselves. 
So if you have a variable: private static int i = 0; and 
you increment it ( i++ ) in one instance, 
the change will be reflected in all instances.
 
 
	Variables : 
		
		depending on what's stored inside container
		pure value or address of object 
			-- primitive variable   int i ; 
			-- reference variable   String s ; 

		depending on where is this variable defined 
			-- inside method 
				--->>> local variable 
			-- if it's on method declaration 
				--->>> method parameters 
			-- if it's outside any method under the class
				-->> field 
					---> instance field/ variable  
					---> static field / variable 

	static members of the class 
			-- static methods 
			-- static field / variable | class variable 
			
	
	static fields are also called class variable 
	because it belong to the class directly 
	compared to instance variables/fields belong to the object 
	
	For example 
	House --> instance variable of num, design 
		-- each object will their own copy of num , design 
		
		-->  static variable/field of neibourhoodName
			--> each and every house object created will 
				share one copy of neibourhoodName value 
	
	Static belong to the class 
		in order to access static members 
		it's strongly recommended to use static way 
			className.staticField  
			className.staticMethod(arg...)  
		
		you may still use an object to access those members 
			obj.staticField 
			since there is only one copy 
				 any change made to the value 
				 will reflect on every objects
	
	
	instance belong to the object 
		
		in order to access instance members 	
		We MUST CREATE AN OBJECT !!! 
			obj.instanceFiled 
			obj.instanceMethod(arg...) 
			
			
	static variable|field  | class variable 
	
		It has single copy among all instances 
		every objects created out of the class 
		will have 1 single value to share
	
	Where can we access it in same class : 
		
		-- constructor 
		-- static methods 
		-- instance method 
		
	Bottom line is -->> everywhere in same class 
	
	counting how many objects are created using static field
		
	public class Person {
	
	String name; 
	float height; 
	char gender; 
	
	static String race = "Human";
	
	static int counter ; 
	//int counter ; 

	
	public Person(String name, float height, char gender) {
		this.name = name;
		this.height = height;
		this.gender = gender;
		
		//counter = counter + 1 ; 
		counter ++; 
	} 
		
	Where and how can we access it outside class : 
		
		static way -->> classname.staticFiledName
		as long as it's visible 
		
		
	what kind of access modifier can be used 
		public protected default private 
		
	
	
	inside instance methods -- 
		we can access any fields -- static | instance 
		we can access any methods -- static | instance 
	
	inside static methods -- 
		ONLY STATIC FILEDS AND METHOD can be accessed 
  } 
 -------------------------------------------------------------
 